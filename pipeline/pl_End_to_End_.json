{
	"name": "pl_End_to_End_",
	"properties": {
		"activities": [
			{
				"name": "Validation1",
				"type": "Validation",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "ds_summary_files",
						"type": "DatasetReference"
					},
					"timeout": "0.12:00:00",
					"sleep": 10
				}
			},
			{
				"name": "Get Metadata1",
				"type": "GetMetadata",
				"dependsOn": [
					{
						"activity": "Validation1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "srs_audit",
						"type": "DatasetReference"
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "DelimitedTextReadSettings"
					}
				}
			},
			{
				"name": "Filter1",
				"type": "Filter",
				"dependsOn": [
					{
						"activity": "Get Metadata1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get Metadata1').output.childItems",
						"type": "Expression"
					},
					"condition": {
						"value": "@endswith(item().type,'File')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Filter1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Filter1').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Copy data1",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "DelimitedTextSource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": true,
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "DelimitedTextReadSettings"
									}
								},
								"sink": {
									"type": "AzureSqlSink",
									"writeBehavior": "insert",
									"sqlWriterUseTableLock": false
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "srs_audit_ds",
									"type": "DatasetReference",
									"parameters": {
										"File_Name": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "snk_audit_log",
									"type": "DatasetReference",
									"parameters": {
										"Table_Name": {
											"value": "@substring(item().name,0,lastindexof(item().name,'.csv'))",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "Stored procedure1",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Copy data1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[sp_InsertauditPipelineLog]",
								"storedProcedureParameters": {
									"DataFactory_Name": {
										"value": {
											"value": "@pipeline().DataFactory",
											"type": "Expression"
										},
										"type": "String"
									},
									"Pipeline_Name": {
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										},
										"type": "String"
									},
									"RunId": {
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										},
										"type": "String"
									},
									"TriggerId": {
										"value": {
											"value": "@pipeline().TriggerId",
											"type": "Expression"
										},
										"type": "String"
									},
									"TriggerName": {
										"value": {
											"value": "@pipeline().TriggerName",
											"type": "Expression"
										},
										"type": "String"
									},
									"TriggerTime": {
										"value": {
											"value": "@pipeline().TriggerTime",
											"type": "Expression"
										},
										"type": "String"
									},
									"TriggerType": {
										"value": {
											"value": "@pipeline().TriggerType",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "ls_sql_sever_endroendpl",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "Copy data2",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Copy data1",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "DelimitedTextSource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": true,
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "DelimitedTextReadSettings"
									}
								},
								"sink": {
									"type": "DelimitedTextSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "DelimitedTextWriteSettings",
										"quoteAllText": true,
										"fileExtension": ".txt"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "srs_errorfiles",
									"type": "DatasetReference",
									"parameters": {
										"Error_Files": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "snk_error_files",
									"type": "DatasetReference"
								}
							]
						},
						{
							"name": "Stored procedure2",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Stored procedure1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[usp_InsertPipelineLogRowsRead]",
								"storedProcedureParameters": {
									"CopiedDate": {
										"value": {
											"value": "@formatDateTime(utcNow(), 'yyyy-MM-dd HH:mm:ss')",
											"type": "Expression"
										},
										"type": "DateTime"
									},
									"RowsCopied": {
										"value": {
											"value": "@activity('Copy data1').output.rowsCopied",
											"type": "Expression"
										},
										"type": "String"
									},
									"RowsRead": {
										"value": {
											"value": "@activity('Copy data1').output.rowsRead",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"TableName": {
										"value": {
											"value": "@substring(item().name, 0, lastIndexOf(item().name, '.'))",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "ls_sql_sever_endroendpl",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "Copy data3",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "ForEach1",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "srs_summary_file",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "ssnk_summary_table",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Stored procedure3",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Copy data3",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[sp_compare]"
				},
				"linkedServiceName": {
					"referenceName": "ls_sql_sever_endroendpl",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Web1",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Lookup1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"method": "POST",
					"url": "https://prod-16.centralindia.logic.azure.com:443/workflows/29876a2e4ba144aea2c05a2fe5d2d9ce/triggers/When_an_HTTP_request_is_received/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2FWhen_an_HTTP_request_is_received%2Frun&sv=1.0&sig=NaTlrhkdm_-MNDlDK3MSvxfZBZNSA-IE3SkvpzEMMFw",
					"body": {
						"value": "@json(concat('{ \n   \"DF-Name\": \"', pipeline().DataFactory, '\", \n   \"PL-Name\": \"', pipeline().Pipeline, '\", \n   \"lookupResult\": ', string(activity('Lookup1').output), '}'))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Lookup1",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Stored procedure3",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "select distinct TableName as FileName, SourceFilesCount as RowsInSource, TargetFileAuditAsRecCount as RowsInTarget, Status, CAST(LoadDate AS DATE) as LoadDate\nfrom CompareRecon WHERE CAST(LoadDate AS DATE) = CAST(GETDATE() AS DATE);",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "AzureSqlTable1lookup",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			}
		],
		"annotations": [],
		"lastPublishTime": "2025-09-17T06:14:38Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}